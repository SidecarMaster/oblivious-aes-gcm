name: aes-gcm

on:
  pull_request:
    paths:
      - "**"
  push:
    branches: develop

env:
  CARGO_INCREMENTAL: 0
  RUSTFLAGS: "-Dwarnings"

jobs:
  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt
          override: true
          profile: minimal
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.51.0 # MSRV (highest in repo)
          components: clippy
          override: true
          profile: minimal
      - run: cargo clippy --all --exclude crypto_box --all-features -- -D warnings

  codecov:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - uses: actions-rs/tarpaulin@v0.1
        with:
          version: latest
          args: --all -- --test-threads 1
      - uses: codecov/codecov-action@v1
      - uses: actions/upload-artifact@v1
        with:
          name: code-coverage-report
          path: cobertura.xml

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - 1.49.0 # MSRV
          - stable
        target:
          - armv7a-none-eabi
          - thumbv7em-none-eabi
          - wasm32-unknown-unknown
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}
          override: true
          profile: minimal
      - run: cargo build --no-default-features --release --target ${{ matrix.target }}

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          # 32-bit Linux
          - target: i686-unknown-linux-gnu
            rust: 1.49.0 # MSRV
            deps: sudo apt update && sudo apt install gcc-multilib
          - target: i686-unknown-linux-gnu
            rust: stable
            deps: sudo apt update && sudo apt install gcc-multilib

          # 64-bit Linux
          - target: x86_64-unknown-linux-gnu
            rust: 1.49.0 # MSRV
          - target: x86_64-unknown-linux-gnu
            rust: stable
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}
          override: true
          profile: minimal
      - run: ${{ matrix.deps }}
      - run: cargo test --target ${{ matrix.target }} --release
      - run: cargo test --target ${{ matrix.target }} --release --features stream,std,zeroize
      - run: cargo build --target ${{ matrix.target }} --benches

  # TODO(tarcieri): re-unify this with `test` when MSRV is 1.51+
  heapless:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - 1.51.0 # MSRV for `heapless`
          - stable
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
      - run: cargo test --release --all-features
